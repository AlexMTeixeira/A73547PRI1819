<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE manifesto SYSTEM "../../../Manifesto/manifesto.dtd">
<manifesto>
    <meta>
        <id>PRI1819_MIEI_TPC8</id>
        <título>Aplicação de Submição de Ficheiros Com AJAX</título>
        <subtítulo>Relatório relativo ao oitavo trabalho de casa da cadeira de PRI</subtítulo>
        <dinício>9 Novembro 2018</dinício>
        <dfim>12 Novembro 2018</dfim>
        <supervisor>
            <nome>José Carlos Ramalho</nome>
            <email>jcr@di.uminho.pt</email>
            <website>http://www.di.uminho.pt/~jcr/</website>
        </supervisor>
    </meta>
    <equipe>
        <elemento>
            <id>a73547</id>
            <nome>Alexandre Teixeira</nome>
            <email>a73547@alunos.uminho.pt</email>
            <website>https://www.facebook.com/alexandremorangoteixeira</website>
        </elemento>
    </equipe>
    <resumo>
        <para>
            Inicialmente, utilizando <b>express generator</b>, foi criada a base da nossa aplicação. Após alterar a porta para 6008, foi necessario
            reutilizar as views, implementadas no TPC anterior.
        </para>
        <para>
            As grandes alterações nas views foram, a alteração do <i>index.pug</i> de modo a utilizar <b>id</b>, com o suporte do <i>client.js</i>, e a criação 
            de uma view <i>lista.pug</i> responsavel pela apresentação da tabela de ficheiros inicial.
        </para>
        <para>
            No <i>client.js</i>, com o nome de <i>myUploader.js</i>, foi necessário definir dois parametros em <b>AJAX</b> e duas funções. O primeiro é para atualizar
            a tabela de ficheiros, quando a pagina é aberta, e a segunda é responsavel por responder ao botão <i>Enviar</i>. As duas funções, estão interligadas ao botão,
            sendo responsaveis pela atualização da tabela e por enviar a descrição e o ficheiro para o servidor, através de <i>ajaxPost</i> e <i>formPost</i>, respetivamente.
        </para>
        <para>
            Para responder aos pedidos, foram criadas, em <i>index.js</i>, diferentes resposta aos pedidos do cliente. A primeira <b>'/'</b> executa o render do pug <i>index</i>, 
            de seguida, em <b>'/table'</b>, é atualizada a tabela de ficheiros, encontrada em <i>database.json</i>. Além disso foi necessário, criar dois metodos para <i>post</i>,
            o <b>'/add'</b> e o <b>'/update'</b>, onde o primeiro é responsavel por adicionar o ficheiro a pasta public e o segundo atualizar a base de dados.
        </para>
    </resumo>
    <resultados>
        <resultado path="manifesto-tp8.xml">XML com o conteudo do manifesto.</resultado>
        <resultado path="https://github.com/anguinho/A73547PRI1819">Repositório GIT para os trabalhos de Casa</resultado>
    </resultados>
</manifesto>